# Docker Setup with Ansible on Remote Machine

![Docker](https://img.shields.io/badge/Docker-Aqua?logo=docker&logoColor=white)
![Ansible](https://img.shields.io/badge/Ansible-Red?logo=ansible&logoColor=white)
![NGINX](https://img.shields.io/badge/Nginx-Orange?logo=nginx&logoColor=white)

## Overview
This project demonstrates how to **install Docker on a remote machine using Ansible** and **run an Nginx container**. It automates deployment and ensures consistent setup across servers.

## Prerequisites
- Local machine with Ansible installed  
- Remote machine accessible via SSH  
- User with `sudo` privileges on the remote machine  

## Project Structure

.
├── inventory.ini # List of remote hosts
├── docker-play.yaml # Ansible playbook to install Docker & run container
└── README.md # Project documentation


## Steps

### 1. Inventory File
`inventory.ini` contains the remote host(s) information:
```ini
[servers]
vm1 ansible_host=REMOTE_IP ansible_user=USERNAME

2. Ansible Playbook

docker-play.yaml automates:

    Installing Docker and dependencies

    Starting Docker service

    Pulling and running the Nginx container

Example snippet:

- name: Install Docker and run container
  hosts: servers
  become: yes

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Run Nginx container
      community.docker.docker_container:
        name: nginx
        image: nginx:latest
        state: started
        ports:
          - "80:80"

3. Running the Playbook

Execute the playbook from your local machine:

ansible-playbook -i inventory.ini docker-play.yaml

4. Verification

    Check Docker installation:

ssh USER@REMOTE_IP "docker --version"

    Check running container:

ssh USER@REMOTE_IP "docker ps"

    Open browser at http://REMOTE_IP to see the Nginx welcome page.

Notes

    Make sure SSH keys are set up for passwordless access (optional but recommended).

    You can modify the playbook to deploy other containers or multiple services.
